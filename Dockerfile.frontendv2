FROM node:18-slim AS builder

# Install required dependencies for sharp
RUN apt-get update && \
    apt-get install -y build-essential python3 libvips-dev && \
    rm -rf /var/lib/apt/lists/*

# Create directory with proper permissions first
RUN mkdir -p /app && \
    chown -R node:node /app

WORKDIR /app

# Configure npm for non-root global installations
RUN mkdir -p /home/node/.npm-global && \
    chown -R node:node /home/node/.npm-global

# Switch to node user before any npm operations
USER node

# Configure npm to use the custom directory
ENV PATH=/home/node/.npm-global/bin:$PATH
ENV NPM_CONFIG_PREFIX=/home/node/.npm-global

# Create required directories
RUN mkdir -p ./src ./app ./components ./lib ./styles ./types ./utils ./public ./supabase

# Copy package.json from chatbot-ui-shadcn directory
COPY --chown=node:node ./chatbot-ui-shadcn/package*.json ./

# Install dependencies
RUN npm cache clean --force && \
    npm install --legacy-peer-deps --no-fund --no-audit

# Copy all files from chatbot-ui-shadcn directory
COPY --chown=node:node ./chatbot-ui-shadcn/ ./

# Set environment variables
ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1
ENV NODE_OPTIONS="--max_old_space_size=4096"
ENV DOCKER_BUILD=true

# Build the application
RUN npm run build || (echo "Build failed. Check logs for details." && exit 1)

# Production stage
FROM node:18-slim AS runner

WORKDIR /app

# Create directory and set permissions
RUN mkdir -p /app && \
    chown -R node:node /app

# Switch to node user
USER node

# Copy only necessary files from builder
COPY --from=builder --chown=node:node /app/next.config.js ./
COPY --from=builder --chown=node:node /app/public ./public
COPY --from=builder --chown=node:node /app/.next ./.next
COPY --from=builder --chown=node:node /app/node_modules ./node_modules
COPY --from=builder --chown=node:node /app/package.json ./package.json


# Start the application
CMD ["npm", "start"]